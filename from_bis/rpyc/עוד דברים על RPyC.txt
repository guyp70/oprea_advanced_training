נקודות ל-RPyC
•	להכווין ל-get/set magic methods (להעביר מסר שלפעמים יש פתרון טוב בתיעוד)
 
חיתוך פתיחה:
•	להציג את עולם הבעיה
•	מה מצופה מה-DR-ים:
o	הצגת flow מלא כולל use case
o	חלוקה למחלקות (לא קוד שלם)
o	תקשורת בין השרת ללקוח
•	אל תעשו טסטים
 
חיתוך סוף:
•	להציג פתב"ס
•	להסביר איך עושים לזה טסטים
o	System tests vs unit tests
o	הפרדה בין IO ללוגיקה בשביל unit tests נכונים
•	שאלות דיזיין קלאסיות שחוזרות על עצמן
o	חלוקת אחריות
o	תעדוף שונה לרכיבים שונים (ללקוח חשוב מהירות וקלילות, לשרת חשוב חוסן אבל הוא יכול לעבוד קשה)
o	Code reusability + modularity - גורם לכך שקל לעשות שינויים
o	Coupling
•	הערך של DR-ים ולדבר עם אחרים
